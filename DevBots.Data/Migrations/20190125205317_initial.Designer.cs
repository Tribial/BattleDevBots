// <auto-generated />
using System;
using System.Collections.Generic;
using DevBots.Data.DataAccess;
using DevBots.Shared.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevBots.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190125205317_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevBots.Shared.Models.AccountSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("MouseEnabled");

                    b.Property<string>("Theme");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AccountSettings");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Match", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<long?>("EnemyId");

                    b.Property<bool>("HasWon");

                    b.Property<long?>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("EnemyId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DevBots.Shared.Models.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Token");

                    b.Property<DateTime>("TokenExpirationDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Robot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Damage");

                    b.Property<int>("FireSpeed");

                    b.Property<int>("Health");

                    b.Property<string>("Name");

                    b.Property<int>("Speed");

                    b.HasKey("Id");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Script", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("ForRobotId");

                    b.Property<int>("Lines");

                    b.Property<string>("Name");

                    b.Property<long?>("OwnerId");

                    b.Property<string>("ServerPath");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ForRobotId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Scripts");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AffectForce");

                    b.Property<string>("AffectProp");

                    b.Property<int>("Cooldown");

                    b.Property<string>("Name");

                    b.Property<string>("Parameters");

                    b.Property<int?>("RobotId");

                    b.Property<string>("Target");

                    b.HasKey("Id");

                    b.HasIndex("RobotId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("DevBots.Shared.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("Guid");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsConfirmed");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Match", b =>
                {
                    b.HasOne("DevBots.Shared.Models.Player", "Enemy")
                        .WithMany()
                        .HasForeignKey("EnemyId");

                    b.HasOne("DevBots.Shared.Models.Player", "Player")
                        .WithMany("Matches")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Script", b =>
                {
                    b.HasOne("DevBots.Shared.Models.Robot", "ForRobot")
                        .WithMany()
                        .HasForeignKey("ForRobotId");

                    b.HasOne("DevBots.Shared.Models.Player", "Owner")
                        .WithMany("Scripts")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("DevBots.Shared.Models.Skill", b =>
                {
                    b.HasOne("DevBots.Shared.Models.Robot")
                        .WithMany("Skills")
                        .HasForeignKey("RobotId");
                });
#pragma warning restore 612, 618
        }
    }
}
